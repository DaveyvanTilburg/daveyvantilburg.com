@{
    ViewBag.Title = "Home Page";
}

@section css
{
    <link rel="stylesheet" href="~/css/home.css" />
}
<form target="_blank" action="/ExportAnything/Export" method="post">
    <div class="column-selections">
    
    </div>

    <div>
        <input type="radio" id="exportTypeCsv" name="exportType" value="csv" checked />
        <label for="exportTypeCsv">CSV</label>

        <input type="radio" id="exportTypeJson" name="exportType" value="json"/>
        <label for="exportTypeJson">JSON</label>

        <input type="radio" id="exportTypeExcel" name="exportType" value="xlsx"/>
        <label for="exportTypeExcel">EXCEL</label>
        
        <input type="radio" id="exportTypePdf" name="exportType" value="pdf" />
        <label for="exportTypePdf">PDF</label>
    </div>

    <input type="submit" value="Download"/>
</form>

@section Scripts
{
    <script src="js/jquery.js"></script>
    <script>
        $(function(){
            let input = eval(@Html.Raw(@ViewBag.JSONObject));

            input.forEach(function (p) {
                $('.column-selections').append(`<div id="${p}" class="column-selection dropzone"><input class="column" type="checkbox" name="columns" value="${p}"><span draggable="true">${p}</span></div>`);
            });
            
            $(document).on('change', '.column', function(){
                let checked = $(this).is(':checked');
                let div = $(this).closest('.column-selection');
                
                if(checked){
                    div.addClass('output');
                    div.append(`<input class="alias" type="text" name="aliases" value="${$(this).val()}" />`);
                    div.append(`<input class="index" type="text" name="indexes" value="0" readonly="readonly" />`);
                } else {
                    div.removeClass('output');
                    div.find('.alias').remove();
                    div.find('.index').remove();
                }
                updateAllIndexes();
            });
            
            function updateAllIndexes(){
                let outputs = $('.column-selection.output');
                outputs.each(function(div){
                    let index = $('.column-selection.output').index(this);
                    $(this).find('.index').val(index + 1);
                });
            }
            
            class Draggables{
                constructor(){
                    this.dragged = null;
                    this.index = null;
                    this.list = null;
                }
                
                init() {
                    let self = this;

                    document.addEventListener("dragstart", (event) => {
                        let target = event.target;
                        if (target.nodeName !== 'DIV')
                            target = $(target).closest('div.dropzone')[0];

                        self.dragged = target;
                        self.list = $('DIV.dropzone');
                        self.index = self.list.index(self.dragged);

                        event.dataTransfer.setDragImage(target, 0, 0);
                    });

                    document.addEventListener("dragover", (event) => {
                        event.preventDefault();
                    });

                    document.addEventListener("drop", (event) => {
                        let target = event.target;
                        if (target.nodeName !== 'DIV')
                            target = $(target).closest('div.dropzone')[0];

                        if ($(target).hasClass("dropzone") && target.id !== self.dragged.id) {
                            self.dragged.remove(self.dragged);
                            let indexDrop = self.list.index(target);

                            if (self.index > indexDrop) {
                                target.before(self.dragged);
                            } else {
                                target.after(self.dragged);
                            }
                        }

                        updateAllIndexes();
                    });
                }
            }

            new Draggables().init();
        });
    </script>
}